{"version":3,"sources":["components/layout/SignedInNavbar.js","actions/authActions.js","components/layout/SignedOutNavbar.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectContainer.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","actions/projectActions.js","components/MarioPlan.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","NavLink","to","className","initials","onClick","SignedOutNavbar","state","console","log","firebase","profile","links","uid","layout_SignedInNavbar","layout_SignedOutNavbar","Link","href","data-target","id","Notification","notifications","map","notification","key","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","firstName","lastName","createdAt","toString","calendar","ProjectContainer","projects","concat","projects_ProjectSummary","Dashboard","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this$props","projects_ProjectContainer","dashboard_Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","format","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","defineProperty","target","authError","onSubmit","onChange","htmlFor","credentials","signInWithEmailAndPassword","catch","error","SignUp","signUp","newUser","_ref3","getFirestore","db","createUserWithEmailAndPassword","res","doc","set","toUpperCase","CreateProject","createProject","history","push","add","objectSpread","authorId","Date","err","MarioPlan","BrowserRouter","basename","process","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","App","components_MarioPlan","Boolean","window","location","hostname","initialState","authReducer","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","attachAuthIsReady","useFirestoreForProfile","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.304b41e7.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../actions/authActions\";\n\nconst SignedInNavbar = (props) => {\n  return (\n    <ul>\n      <li><NavLink to='/'>Dashboard</NavLink></li>\n      <li><NavLink to='/create'>Create new post</NavLink></li>\n      <li><NavLink to='/' className=\"btn-floating red lighten-1 center\">{props.initials}</NavLink></li>\n      <li><NavLink to='/' onClick={() => props.signOut()}>SignOut</NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInNavbar)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' })\n    }).catch((error) => {\n      dispatch({ type: 'LOGIN_ERROR', error })\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase.auth().signOut()\n      .then(() => {\n        dispatch({ type: 'LOGOUT_SUCCESS' })\n      })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const db = getFirestore()\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((res) => {\n      return db.collection(\"users\").doc(res.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: (newUser.firstName[0] + newUser.lastName[0]).toUpperCase()\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch((error) => {\n      dispatch({ type: 'SIGNUP_ERROR', error })\n    })\n  }\n}","import React from 'react'\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutNavbar = () => {\n  return (\n    <ul>\n      <li><NavLink to='/signin'>SIGN IN</NavLink></li>\n      <li><NavLink to='/signup'>SIGN UP</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutNavbar\n","import React from 'react'\nimport SignedInNavbar from './SignedInNavbar';\nimport SignedOutNavbar from './SignedOutNavbar';\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n  const links = !props.auth.uid ?\n    <SignedOutNavbar /> : <SignedInNavbar initials={props.initials} />\n  return (\n    <div>\n      <nav>\n        <div className=\"nav-wrapper grey darken-3\">\n          <div className=\"container\">\n            <Link to='/' className=\"brand-logo\">BLOG</Link>\n            <a href=\"#\" data-target=\"mobile-links\" className=\"sidenav-trigger\">\n              <i className=\"material-icons\">menu</i>\n            </a>\n            <div className=\"right hide-on-med-and-down\">\n              {links}\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"sidenav\" id=\"mobile-links\">\n        {links}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    auth: state.firebase.auth,\n    initials: state.firebase.profile.initials\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notification = (props) => {\n  const { notifications } = props\n  return (\n    <div className=\"col s12 m5 section right\" id=\"notifications\">\n      <div className=\"card blue-grey darken-1\">\n        <div className=\"card-content white-text\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications && notifications.map(notification => {\n              return <li key={notification.id}>\n                <span className=\"pink-text\">{notification.user}</span>\n                <span> {notification.content}</span>\n                <div className=\"grey-text note-date smaller-text\">\n                  {moment(notification.time.toDate()).fromNow()}\n                </div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\nimport './Projects.css'\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card blue-grey darken-1 project-summary\">\n      <div className=\"card-content white-text\">\n        <span className=\"card-title\">{project.title}</span>\n        <p className=\"smaller-text\">posted by {project.firstName + ' ' + project.lastName}</p>\n        <p className=\"smaller-text\">created at {moment(project.createdAt.toDate().toString()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport ProjectSummary from './ProjectSummary';\n\nconst ProjectContainer = ({ projects }) => {\n  return (\n    <div className=\"col s12 m6 project-container section\" id=\"projects\">\n      {projects && projects.map(project => {\n        return (\n          <Link to={`/project/${project.id}`} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectContainer\n","import React, { Component } from 'react'\nimport Notification from './Notification';\nimport ProjectContainer from '../projects/ProjectContainer'\nimport './Dashboard.css'\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class Dashboard extends Component {\n  render() {\n    const { auth, projects, notifications } = this.props\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container dashboard\">\n        <div className=\"row\">\n          <ProjectContainer projects={projects} />\n          <Notification notifications={notifications} />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: 'projects',\n      orderBy: ['createdAt', 'desc']\n    },\n    {\n      collection: 'notifications',\n      limit: 3,\n      orderBy: ['time', 'desc']\n    }\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { auth, project } = props\n  if (!auth.uid) return <Redirect to='/signin' />\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0 lighten-4\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">\n              {project.title}\n            </span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action lighten-4 grey-text\">\n            <div>Posted by {project.firstName}</div>\n            <div>Created at {moment(project.createdAt.toDate()).format('LLLL')}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id\n  const projects = state.firestore.data.projects\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signIn(this.state)\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n\n  }\n\n  render() {\n    const { authError, auth } = this.props\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container auth\">\n        <div className=\"red-text center\">\n          {authError ? <p>{authError}</p> : null}\n        </div>\n        <div className=\"row\">\n          <form onSubmit={this.handleSubmit} className=\"col s10 offset-s1\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input id=\"email\" type=\"email\" className=\"validate\"\n                  onChange={this.handleChange} />\n                <label htmlFor=\"email\">Email</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input id=\"password\" type=\"password\" className=\"validate\"\n                  onChange={this.handleChange} />\n                <label htmlFor=\"password\">Password</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <button className=\"btn-large waves-effect waves-light col s4 offset-s4\">Sign In</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (credentials) => dispatch(signIn(credentials))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from '../../actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signUp(this.state)\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n\n  }\n\n  render() {\n    const { auth, authError } = this.props\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container auth\">\n        <div className=\"red-text center\">\n          {authError ? <p>{authError}</p> : null}\n        </div>\n        <div className=\"row\">\n          <form onSubmit={this.handleSubmit} className=\"col s10 offset-s1\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"row\">\n              <div className=\"input-field col s6\">\n                <input onChange={this.handleChange} id=\"firstName\" type=\"text\" className=\"validate\" />\n                <label htmlFor=\"firstName\">First Name</label>\n              </div>\n              <div className=\"input-field col s6\">\n                <input onChange={this.handleChange} id=\"lastName\" type=\"text\" className=\"validate\" />\n                <label htmlFor=\"lastName\">Last Name</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input onChange={this.handleChange} id=\"email\" type=\"email\" className=\"validate\" />\n                <label htmlFor=\"email\">Email</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input onChange={this.handleChange} id=\"password\" type=\"password\" className=\"validate\" />\n                <label htmlFor=\"password\">Password</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <button className=\"btn-large waves-effect waves-light col s4 offset-s4\">Sign Up</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../actions/projectActions'\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.createProject(this.state)\n    this.props.history.push('/')\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  render() {\n    const { auth } = this.props\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container auth\">\n        <div className=\"row\">\n          <form onSubmit={this.handleSubmit} className=\"col s10 offset-s1\">\n            <h5 className=\"grey-text text-darken-3\">Post a blog</h5>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input id=\"title\" type=\"text\" className=\"validate\"\n                  onChange={this.handleChange} />\n                <label htmlFor=\"title\">Title</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <textarea id=\"content\" className=\"materialize-textarea\"\n                  onChange={this.handleChange}></textarea>\n                <label htmlFor=\"content\">Content</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <button className=\"btn-large waves-effect waves-light col s4 offset-s4\">Post</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const db = getFirestore()\n    const uid = getState().firebase.auth.uid\n    const profile = getState().firebase.profile\n\n    db.collection('projects').add({\n      ...project,\n      firstName: profile.firstName,\n      lastName: profile.lastName,\n      authorId: uid,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project })\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n    })\n  }\n}","import React, { Component } from 'react';\nimport Navbar from './layout/Navbar';\nimport Dashboard from './dashboard/Dashboard';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ProjectDetails from './projects/ProjectDetails';\nimport SignIn from './auth/SignIn';\nimport SignUp from './auth/SignUp';\nimport CreateProject from './projects/CreateProject';\n\nclass MarioPlan extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default MarioPlan;\n","import React, { Component } from 'react';\nimport MarioPlan from './components/MarioPlan';\n\nclass App extends Component {\n  render() {\n    return (\n      <MarioPlan />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  authError: null\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      console.log(\"Signed in\")\n      return {\n        ...state,\n        authError: null\n      }\n    case 'LOGIN_ERROR':\n      console.log(action.error.message)\n      return {\n        ...state,\n        authError: action.error.message\n      }\n    case 'LOGOUT_SUCCESS':\n      console.log(\"Signed out\")\n      return state\n    case 'SIGNUP_SUCCESS':\n      console.log(\"Signed up\")\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log(action.error.message)\n      return {\n        ...state,\n        authError: action.error.message\n      }\n    default:\n      return {\n        ...state,\n        authError: null\n      }\n  }\n}\n\nexport default authReducer","const initialState = {\n  projects: [\n    {\n      id: 1,\n      title: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n      content: \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\"\n    },\n    {\n      id: 2,\n      title: \"qui est esse\",\n      content: \"est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis qui aperiam non debitis possimus qui neque nisi nulla\"\n    },\n    {\n      id: 3,\n      title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n      content: \"et iusto sed quo iure voluptatem occaecati omnis eligendi aut ad voluptatem doloribus vel accusantium quis pariatur molestiae porro eius odio et labore et velit aut\"\n    },\n    {\n      id: 4,\n      title: \"eum et est occaecati\",\n      content: \"ullam et saepe reiciendis voluptatem adipisci sit amet autem assumenda provident rerum culpa quis hic commodi nesciunt rem tenetur doloremque ipsam iure quis sunt voluptatem rerum illo velit\"\n    },\n  ]\n}\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project)\n      return state\n    case 'CREATE_PROJECT_ERROR':\n      console.log('created project error', action.err)\n      return state\n    default:\n      return state\n  }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyDMFWm_ya-Kf7XsGIwIbthVLibzqEOIKls\",\n  authDomain: \"marioplan-6dd66.firebaseapp.com\",\n  databaseURL: \"https://marioplan-6dd66.firebaseio.com\",\n  projectId: \"marioplan-6dd66\",\n  storageBucket: \"marioplan-6dd66.appspot.com\",\n  messagingSenderId: \"1083091140770\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from './reducers/rootReducer';\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk'\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {\n      userProfile: 'users',\n      attachAuthIsReady: true,\n      useFirestoreForProfile: true,\n    }),\n    reduxFirestore(fbConfig)\n  )\n)\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'));\n  serviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}